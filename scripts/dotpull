!/bin/sh
# put a dotfile under revision control
#

# user supplies dot file to process
DOTF=${1}
if [ -z "$DOTF" ]; then
	echo "Must supply name of a dot file or folder"
	exit 1
fi

# make it relative to the home directory
# and make a basename copy
DOTF=~/"${DOTF}"
BASEDOTF=$(basename ${DOTF})

# dot must be present
if [ ! -e ${DOTF} ]; then
	echo "[$DOTF] does not exist"
	exit 1
fi

# see if the file is really a dot file
# NOTE: its possible that in the future we'll allow non-dot files
# to be processed, but for now exit with an error

# skip links
if [ -h ${DOTF} ]; then
	echo "File is already a symbolic link"
	exit 1
fi

# first, put copies in originals folder and push to git
# in case something goes horribly wrong
DEST="./dot$(basename ${DOTF})"
if ! cp -Rv ${DOTF} originals/; then
	echo "backup copy failed"
	exit 1
else
	git add originals/${BASEDOTF}
	git commit -m "added backup of ${BASEDOTF}" originals/${BASEDOTF}
fi

# make a copy of the file, prefixing "dot."
# and link it back to its original location
cp -Rv ${DOTF} ${DEST}
git add ${DEST}
git commit -m "added new dot file: $DEST"
git push
if ! rm -v ${DOTF}; then
    echo "Unable to remove ${DOTF}"
else
    if ! ln -s $(pwd)/$(basename ${DEST}) ${DOTF}; then
	echo "Failed to symlink $DOTF"
	exit 1
    fi
fi
